/*
 * PBLM REST API
 * A comprehensive REST API for managing orders, customers, products, inventory, VAT, groups, and currencies.  ## Authentication All endpoints require authentication via headers: - `x-db`: Database identifier - `x-saldiuser`: User identifier - `x-apikey`: API key for authentication 
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.69
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.PblmRestApi);
  }
}(this, function(expect, PblmRestApi) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('CreateCreditorGroupRequest', function() {
      beforeEach(function() {
        instance = new PblmRestApi.CreateCreditorGroupRequest();
      });

      it('should create an instance of CreateCreditorGroupRequest', function() {
        // TODO: update the code to test CreateCreditorGroupRequest
        expect(instance).to.be.a(PblmRestApi.CreateCreditorGroupRequest);
      });

      it('should have the property description (base name: "description")', function() {
        // TODO: update the code to test the property description
        expect(instance).to.have.property('description');
        // expect(instance.description).to.be(expectedValueLiteral);
      });

      it('should have the property vatGroup (base name: "vatGroup")', function() {
        // TODO: update the code to test the property vatGroup
        expect(instance).to.have.property('vatGroup');
        // expect(instance.vatGroup).to.be(expectedValueLiteral);
      });

      it('should have the property currency (base name: "currency")', function() {
        // TODO: update the code to test the property currency
        expect(instance).to.have.property('currency');
        // expect(instance.currency).to.be(expectedValueLiteral);
      });

      it('should have the property language (base name: "language")', function() {
        // TODO: update the code to test the property language
        expect(instance).to.have.property('language');
        // expect(instance.language).to.be(expectedValueLiteral);
      });

      it('should have the property contraAccount (base name: "contraAccount")', function() {
        // TODO: update the code to test the property contraAccount
        expect(instance).to.have.property('contraAccount');
        // expect(instance.contraAccount).to.be(expectedValueLiteral);
      });

      it('should have the property reversePayment (base name: "reversePayment")', function() {
        // TODO: update the code to test the property reversePayment
        expect(instance).to.have.property('reversePayment');
        // expect(instance.reversePayment).to.be(expectedValueLiteral);
      });

      it('should have the property b2b (base name: "b2b")', function() {
        // TODO: update the code to test the property b2b
        expect(instance).to.have.property('b2b');
        // expect(instance.b2b).to.be(expectedValueLiteral);
      });

    });
  });

}));
